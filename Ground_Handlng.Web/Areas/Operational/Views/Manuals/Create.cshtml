
@model Ground_Handlng.DataObjects.ViewModel.Manual.ManualsViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{ 

}

<link rel="stylesheet" href="~/AdminLTE/dist/css/adminlte.min.css">
<link rel="stylesheet" href="~/AdminLTE/plugins/bootstrap/css/bootstrap.min.css">

<style>
    input.error {
        border-color: #f00 !important;
    }

    small.required {
        color: #f00;
    }
</style>


<section class="content">
    <div class="callout bg-success">
        <h3>Alert !</h3>
        <h5>Please check the below instruction befor Uploading Sections</h5>

        <div class="col-md-5">
            1. Make sure the file is in File.PDF format!
        </div>
        <div class="col-md-5">
            2. Make sure the  'Subject Filed' doesn't contain an '&amp;' and '?' character!
        </div>
        <div class="col-md-5">
            <a href="~/Manuals/000.000 Section Name.pdf" download class="text-white">
                <i class="fa fa-file-pdf"></i>3. Download Sample
            </a>
        </div>
        <div class="col-md-1">
        </div>
    </div>
    <div class="card card-tabs">
        <div class="container" style="margin-top: 20px;">

            <div class="panel panel-primary">
                <div class="panel-body">
                    @using (Html.BeginForm(FormMethod.Post, new { @class = "form-horizontal", @id = "validate", @enctype = "multipart/form-data", @role = "form" }))
                    {
                        @*<form asp-area="Operational" asp-controller="Manuals" asp-action="Create" method="post" enctype="multipart/form-data" class="form-horizontal" role="form" id="validate">*@
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="callout callout-danger error-box-holder" id="general-error" style="display:none">
                            <h4> Please correct the following errors and sumbit again </h4>
                            <ul id="errors" class="error-box"></ul>
                        </div>

                        <ul class="nav nav-tabs nav-justified nav-inline">
                            <li class="nav-item"><a class="nav-link active" href="#primary" data-toggle="tab">Book</a></li>
                            <li class="nav-item"><a class="nav-link" href="#secondary" data-toggle="tab">Book Chapter</a></li>
                            <li class="nav-item"><a class="nav-link" href="#third" data-toggle="tab">Section</a></li>
                        </ul>

                        <div class="tab-content tab-validate" style="margin-top:20px;">
                            <div class="tab-pane active" id="primary">

                                <div class="form-group">
                                    <label asp-for="BookTitle" class="control-label col-md-3"></label>
                                    <div class="col-sm-7">
                                        <input for="BookTitle" class="form-control required" name="booktitle" />
                                    </div>
                                    <span for="BookTitle" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="SequenceNo" class="control-label col-md-3"></label>
                                    <div class="col-sm-7">
                                        <input for="SequenceNo" class="form-control required" name="sequenceno" />
                                    </div>
                                    <span asp-validation-for="SequenceNo" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="tab-pane" id="secondary">

                                <div class="form-group">
                                    <label asp-for="BookChapterNumber" class="control-label col-md-3"></label>
                                    <div class="col-sm-7">
                                        <input for="BookChapterNumber" class="form-control required" name="bookchapternumber" />
                                    </div>
                                    <span for="BookChapterNumber" class="text-danger"></span>
                                </div>


                                <div class="form-group">
                                    <label asp-for="BookChapterTitle" class="control-label col-md-3"></label>
                                    <div class="col-sm-7">
                                        <input for="BookChapterTitle" class="form-control required" name="bookchaptertitle" />
                                    </div>
                                    <span for="BookChapterTitle" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="tab-pane" id="third">
                                @*<div class="form-group">
                                        <label asp-for="BookSectionNumber" class="control-label col-md-3"></label>
                                        <div class="col-sm-7">
                                            <input for="booksectionnumber" class="form-control required" name="booksectionnumber" />
                                        </div>
                                        <span for="BookSectionNumber" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="BookSectionTitle" class="control-label col-md-3"></label>
                                        <div class="col-sm-7">
                                            <input for="booksectiontitle" class="form-control required" name="booksectiontitle" />
                                        </div>
                                        <span for="BookSectionTitle" class="text-danger"></span>
                                    </div>*@
                                <div class="form-group">
                                    <label for="city" class="control-label col-md-2">Section PDF</label>
                                    <div class="col-md-10">
                                        <input for="url" type="file" id="url" name="url[]" class="form-control" multiple />
                                    </div>
                                    <span for="url" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-2 pull-right">
                            <button type="submit" class="btn btn-success btn-block">Save</button>
                        </div>
                        @*</form>*@
                    }


                </div>
            </div>

        </div>
    </div>
</section>

@*<script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>*@
@*<script src="~/AdminLTE/plugins/jquery-validation/additional-methods.min.js"></script>*@
<script src="~/AdminLTE/plugins/jquery-validation/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    $(function () {
             $.validator.setDefaults({
                 submitHandler: function () {
                     // Stop the button from submitting the form:
                     debugger;
                    // evt.preventDefault();
                    var url = "/Operational/Manuals/Create";
                    $('#general-error').hide();
                     $('#errors').empty();
                     var formData = new FormData();
                     //formData.append('x', $('#x').val());
                     $.each($('#url')[0].files, function (key, input) {
                         formData.append('url[]', input);
                     });
                     //formData.append('url', $('#url')[0].files[0]);
                     var other_data = $('#validate').serializeArray();
                     $.each(other_data, function (key, input) {
                         formData.append(input.name, input.value);
                     });
                     $.ajax({
                         url: '/Operational/Manuals/Create',
                         type: 'POST',
                         data: formData,
                         processData: false,
                         contentType: false,
                         cache: false,
                         success: function (data) {
                             debugger;
                             if (data.status == "3" || data.status == "4" || data.status == "5") {
                                 if (data.status == "3") {
                                     swal({
                                         type: 'success',
                                         title: data.message,
                                         showConfirmButton: false,
                                         timer: 3000
                                     }).then(() => { window.location = "/Operational/Manuals/Index"; });;
                                     $('#modal').modal('hide');
                                 }
                                 else {
                                     swal({
                                         type: 'error',
                                         title: data.message,
                                         showConfirmButton: false,
                                         timer: 3000
                                     });
                                 }
                             }
                         },
                         error: function (datd) {
                             window.location = "/Operational/Manuals/Index";
                             swal({
                                 type: 'error',
                                 title: data.message,
                                 showConfirmButton: false,
                                 timer: 3000
                             });

                         }

                     });
                }
            });
        $('#validate').validate({
            ignore: [],
            errorPlacement: function () { },
            invalidHandler: function () {
                setTimeout(function () {
                    $('.nav-tabs a small.required').remove();
                    var validatePane = $('.tab-content.tab-validate .tab-pane:has(input.error)').each(function () {
                        debugger;
                        var id = $(this).attr('id');
                        $('.nav-tabs').find('a[href^="#' + id + '"]').append('<small class="required">***</small>');
                    });
                });
            },
            rules: {
                booktitle: {
                    required: true
                },
                sequenceno: {
                    required: true,
                    number: true
                },
                bookchapternumber: {
                    required: true
                },
                bookchaptertitle: {
                    required: true
                },
                booksectionnumber: {
                    required: true
                },
                booksectiontitle: {
                    required: true
                },
                "url[]": {
                    required: true,
                    //fileMaxSize : true,
                    //extension: "docx|rtf|doc|pdf",
                },
            },
            messages: {
                booktitle: {
                    required: "Please enter a Book Title",
                    number : "Please Enter only number"
                },
                sequenceno: {
                    required: "Please provide a Sequence Number",
                },
                bookchapternumber: {
                    required: "Please enter a Chapter Number"
                },
                bookchaptertitle: {
                    required: "Please provide a Chapter Title",
                },
                booksectionnumber: {
                    required: "Please enter a Section Number"
                },
                booksectiontitle: {
                    required: "Please provide a Section Title",
                },
                "url[]": {
                    required: "Please provide a PDF",
                    //extension: "Please upload valid file formats"
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }

        });
        //$('#url').on('change', function () {
        //    console.log('This file size is: ' + (this.files[0].size / 1024 / 1024).toFixed(2) + " MB");
        //    if ((this.files[0].size / 1024 / 1024).toFixed(2) > 30) {

        //    }
        //});

        $("#url").on("change", function (e) {
            var filename = this.value;
            var files = this.files;
            var URL = window.URL || window.webkitURL;
            var url = URL.createObjectURL(files[0]);
            $(this).closest('.row').find('.preview').attr("href", url).show();
            $(this).next('.check').prop("disabled", true);
            var myfile = $(this).val();
            var ext = myfile.split('.').pop();
            if (ext == "pdf") {
                $(this).next('.check').val(filename);
            } else {
                $(this).closest('.row').find('.preview').hide()
                alert('Invalid File Type');
                $(this).next('.check').val('');
                e.preventDefault();
                $('#url').val('');
            }
            if (e.currentTarget.files[0].size >= 1024 * 1024 * 30) {//30000000
                alert('File Size cannot be more than 30 MB');
                e.preventDefault();
                $(this).closest('.row').find('.preview').hide();
                $('#url').val('');
            }
        });
    });
</script>
