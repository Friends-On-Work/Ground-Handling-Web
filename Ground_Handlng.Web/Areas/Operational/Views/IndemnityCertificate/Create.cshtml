
@model Ground_Handlng.DataObjects.Models.Operational.Forms.IndemnityCertificate.IndemnityCertificate
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{

}
<link rel="stylesheet" href="~/AdminLTE/dist/css/adminlte.min.css" />
<link rel="stylesheet" href="~/AdminLTE/plugins/bootstrap/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/AdminLTE/plugins/datepicker/datepicker3.css" />
<link rel="stylesheet" href="~/AdminLTE/plugins/iCheck/square/blue.css" />
<style type="text/css">

    div#modal {
        width: 100%;
        z-index: 1100;
    }

    #modal .modal-dialog {
        max-width: 80%;
        z-index: 100000;
    }

    input.input-has-value {
        color: red;
    }
    /* For standards browsers */
    /*input[type="text"]:focus {
            border: 1px solid #f00;
        }*/

    /* For Internet Explorer */
    /*input.focus {
            border: 1px solid #f00;
        }*/
    .error {
        border: 2px solid red;
    }
</style>

<section class="container">
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm(FormMethod.Post, new { @class = "form-horizontal", @id = "validate", @enctype = "multipart/form-data", @role = "form" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <p>i hear by declare that i shall hold ETHIOPIAN AIRLINES responsible for any liabilitys that may arise as a result of my sickness while i travel by ETHIOPIAN </p>
                <p>AIRLINES flight No.<b> <u><input asp-for="FlightNumber" class="form-control" name="flightnumber"/></u>  </b> from <b><u><input asp-for="From" class="form-control" name="from" /></u></b> to <b><u><input asp-for="To" class="form-control" name="to" /></u></b>. I hear by Release ETHIOPIAN AIRLINES from all liabilities in connection with my travel under this condition of my health.</p>
                <div class="col-sm-5 float-right">
                    <div class="input-group row">
                        <p class="control-label col-sm-7">Date</p>
                        <div class="col-sm-5">
                            <input asp-for="Date" class="form-control date" name="date" />
                        </div>
                    </div>
                    <div class="input-group row">
                        <p class="control-label col-sm-7">Signed:</p>
                        <div class="col-sm-5">
                            <input asp-for="PassangerSign" class="form-control" name="passangersign"/>
                        </div>
                    </div>
                    <div class="input-group row">
                        <p class="control-label col-sm-7">Closest Relative/Guardian</p>
                        <div class="col-sm-5">
                            <input asp-for="Guardian" class="form-control" name="guardian" />
                        </div>
                    </div>
                    <div class="input-group row">
                        <p class="control-label col-sm-7">Full Address</p>
                        <div class="col-sm-5">
                            <input asp-for="FullAddress" class="form-control" name="fulladdress" />
                        </div>
                    </div>
                    <div class="input-group row">
                        <p class="control-label col-sm-7">Identity Card</p>
                        <div class="col-sm-5">
                            <input asp-for="IdentityCard" class="form-control" name="identitycard" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</section>

<script src="~/AdminLTE/plugins/datepicker/bootstrap-datepicker.js"></script>
<script src="~/AdminLTE/plugins/jquery-validation/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    $('.date').datepicker({
        format: 'yyyy-mm-dd'
    });
    $.validator.setDefaults({
        submitHandler: function () {
            $('#general-error').hide();
            $('#errors').empty();
            var formData = new FormData();
            //formData.append('url', $('#url')[0].files[0]);
            var other_data = $('#validate').serializeArray();
            $.each(other_data, function (key, input) {
                formData.append(input.name, input.value);
            });
            $.ajax({
                url: '/Operational/IndemnityCertificate/Create',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                cache: false,
                success: function (data) {
                    debugger;
                    if (data.status == "3" || data.status == "4" || data.status == "5") {
                        if (data.status == "3") {
                            swal({
                                type: 'success',
                                title: data.message,
                                showConfirmButton: false,
                                timer: 3000
                            }).then(() => { window.location = "/Operational/IndemnityCertificate/Index"; });;
                            $('#modal').modal('hide');
                        }
                        else {
                            swal({
                                type: 'error',
                                title: data.message,
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    }
                },
                error: function (datd) {
                    window.location = "/Operational/IndemnityCertificate/Index";
                    swal({
                        type: 'error',
                        title: data.message,
                        showConfirmButton: false,
                        timer: 3000
                    });

                }

            });
        }
    });
    $('#validate').validate({
        ignore: [],
        errorPlacement: function () { },
        invalidHandler: function () {
            setTimeout(function () {
                $('.nav-tabs a small.required').remove();
                var validatePane = $('.tab-content.tab-validate .tab-pane:has(input.error)').each(function () {
                    debugger;
                    var id = $(this).attr('id');
                    $('.nav-tabs').find('a[href^="#' + id + '"]').append('<small class="required">***</small>');
                });
            });
        },
        rules: {
            flightnumber: {
                required: true
            },
            from: {
                required: true
            },
            to: {
                required: true
            },
            date: {
                required: true
            },
            passangersign: {
                required: true
            },
            guardian: {
                required: true
            },
            fulladdress: {
                required: true
            },
            identitycard: {
                required: true
            },
            url: {
                required: true,
                //fileMaxSize : true,
                //extension: "docx|rtf|doc|pdf",
            },
        },
        messages: {
            flightnumber: {
                required: "Please enter a Flight Number"
            },
            from: {
                required: "Please provide a Depature From",
            },
            to: {
                required: "Please enter a Destination To"
            },
            date: {
                required: "Please provide a date",
            },
            passangersign: {
                required: "Please enter a passanger sign"
            },
            guardian: {
                required: "Please provide a guardian",
            },
            fulladdress: {
                required: "Please enter a full address"
            },
            identitycard: {
                required: "Please provide a identity card",
            },
            url: {
                required: "Please provide a PDF",
                //extension: "Please upload valid file formats"
            },
        },
        errorElement: 'span',
        errorPlacement: function (error, element) {
            error.addClass('invalid-feedback');
            element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
            $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).removeClass('is-invalid');
        }

    });
</script>
